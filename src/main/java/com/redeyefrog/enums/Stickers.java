package com.redeyefrog.enums;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/**
 * Sticker
 * @see <a href="https://devdocs.line.me/files/sticker_list.pdf">sticker list</a>
 * @see <a href="https://developers.line.biz/media/messaging-api/sticker_list.pdf">sticker list</a>
 */
public enum Stickers {

    STK001("11537", "52002734"),
    STK002("11537", "52002735"),
    STK003("11537", "52002736"),
    STK004("11537", "52002737"),
    STK005("11537", "52002738"),
    STK006("11537", "52002739"),
    STK007("11537", "52002740"),
    STK008("11537", "52002741"),
    STK009("11537", "52002742"),
    STK010("11537", "52002743"),
    STK011("11537", "52002744"),
    STK012("11537", "52002745"),
    STK013("11537", "52002746"),
    STK014("11537", "52002747"),
    STK015("11537", "52002748"),
    STK016("11537", "52002749"),
    STK017("11537", "52002750"),
    STK018("11537", "52002751"),
    STK019("11537", "52002752"),
    STK020("11537", "52002753"),
    STK021("11537", "52002754"),
    STK022("11537", "52002755"),
    STK023("11537", "52002756"),
    STK024("11537", "52002757"),
    STK025("11537", "52002758"),
    STK026("11537", "52002759"),
    STK027("11537", "52002760"),
    STK028("11537", "52002761"),
    STK029("11537", "52002762"),
    STK030("11537", "52002763"),
    STK031("11537", "52002764"),
    STK032("11537", "52002765"),
    STK033("11537", "52002766"),
    STK034("11537", "52002767"),
    STK035("11537", "52002768"),
    STK036("11537", "52002769"),
    STK037("11537", "52002770"),
    STK038("11537", "52002771"),
    STK039("11537", "52002772"),
    STK040("11537", "52002773"),

    STK041("11538", "51626494"),
    STK042("11538", "51626495"),
    STK043("11538", "51626496"),
    STK044("11538", "51626497"),
    STK045("11538", "51626498"),
    STK046("11538", "51626499"),
    STK047("11538", "51626500"),
    STK048("11538", "51626501"),
    STK049("11538", "51626502"),
    STK050("11538", "51626503"),
    STK051("11538", "51626504"),
    STK052("11538", "51626505"),
    STK053("11538", "51626506"),
    STK054("11538", "51626507"),
    STK055("11538", "51626508"),
    STK056("11538", "51626509"),
    STK057("11538", "51626510"),
    STK058("11538", "51626511"),
    STK059("11538", "51626512"),
    STK060("11538", "51626513"),
    STK061("11538", "51626514"),
    STK062("11538", "51626515"),
    STK063("11538", "51626516"),
    STK064("11538", "51626517"),
    STK065("11538", "51626518"),
    STK066("11538", "51626519"),
    STK067("11538", "51626520"),
    STK068("11538", "51626521"),
    STK069("11538", "51626522"),
    STK070("11538", "51626523"),
    STK071("11538", "51626524"),
    STK072("11538", "51626525"),
    STK073("11538", "51626526"),
    STK074("11538", "51626527"),
    STK075("11538", "51626528"),
    STK076("11538", "51626529"),
    STK077("11538", "51626530"),
    STK078("11538", "51626531"),
    STK079("11538", "51626532"),
    STK080("11538", "51626533"),

    STK081("11539", "52114110"),
    STK082("11539", "52114111"),
    STK083("11539", "52114112"),
    STK084("11539", "52114113"),
    STK085("11539", "52114114"),
    STK086("11539", "52114115"),
    STK087("11539", "52114116"),
    STK088("11539", "52114117"),
    STK089("11539", "52114118"),
    STK090("11539", "52114119"),
    STK091("11539", "52114120"),
    STK092("11539", "52114121"),
    STK093("11539", "52114122"),
    STK094("11539", "52114123"),
    STK095("11539", "52114124"),
    STK096("11539", "52114125"),
    STK097("11539", "52114126"),
    STK098("11539", "52114127"),
    STK099("11539", "52114128"),
    STK100("11539", "52114129"),
    STK101("11539", "52114130"),
    STK102("11539", "52114131"),
    STK103("11539", "52114132"),
    STK104("11539", "52114133"),
    STK105("11539", "52114134"),
    STK106("11539", "52114135"),
    STK107("11539", "52114136"),
    STK108("11539", "52114137"),
    STK109("11539", "52114138"),
    STK110("11539", "52114139"),
    STK111("11539", "52114140"),
    STK112("11539", "52114141"),
    STK113("11539", "52114142"),
    STK114("11539", "52114143"),
    STK115("11539", "52114144"),
    STK116("11539", "52114145"),
    STK117("11539", "52114146"),
    STK118("11539", "52114147"),
    STK119("11539", "52114148"),
    STK120("11539", "52114149"),

    UNKNOWN("1", "113");

    private String pkgId;

    private String stkId;

    Stickers(String pkgId, String stkId) {
        this.pkgId = pkgId;
        this.stkId = stkId;
    }

    public String getPkgId() {
        return pkgId;
    }

    public String getStkId() {
        return stkId;
    }

    public static Stickers find(String stkId) {
        if(stkId != null && !"".equals(stkId)) {
            for(Stickers sticker : values()) {
                if(stkId.equals(sticker.getStkId())) {
                    return sticker;
                }
            }
        }

        return UNKNOWN;
    }

    public static Stickers random() {
        List<Stickers> stickerArr = Stream.of(values()).filter(sticker -> !sticker.isUnknown()).collect(Collectors.toList());

        BigDecimal random = new BigDecimal(Math.random() * stickerArr.size()).setScale(0, RoundingMode.DOWN);

        return stickerArr.get(random.intValue());
    }

    public boolean isUnknown() {

        return equals(UNKNOWN);
    }

}
